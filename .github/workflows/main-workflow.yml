# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches:  
      - main 
  pull_request:
    branches: 
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checking-out project
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Moving settings.xml file to correct place
        run: |
          cat ~/.m2/settings.xml
          mv ./settings.xml ~/.m2/settings.xml
          cat ~/.m2/settings.xml
      - name: Test
        run: ./mvnw test
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=CesarIll_spring-petclinic -Dsonar.qualitygate.wait=true
      #- name: Setup Maven settings.xml
      #  uses: whelk-io/maven-settings-xml-action@v11
      #  with:
      #    servers: |
      #      [
      #        {
      #          "id": "artifactory",
      #          "username": "${env.ARTIFACTORY_USERNAME_REF}",
      #          "password": "${env.ARTIFACTORY_TOKEN_REF}"
      #        }
      #      ]
      - name: Build with Maven
      #  env:
      #     ARTIFACTORY_USERNAME_REF: "github"
      #     ARTIFACTORY_TOKEN_REF: ${{ secrets.ARTIFACTORY_TOKEN }}
      #     BUILD_ENV: 'github-actions'
        run: |
          mvn -B package -Dmaven.test.skip=true --file pom.xml
      - name: Deploy
        env:
            ARTIFACTORY_TOKEN_REF: ${{ secrets.JFROG_PASSWORD }}
        run: |
          mvn deploy -Dmaven.test.skip=true
